apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

def openCVersionName = "4.4.0"
def libraryVersionCode = 1

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29

        versionCode libraryVersionCode
        versionName openCVersionName

        externalNativeBuild {
            cmake {
                arguments "-DANDROID_STL=c++_shared"
                targets "opencv_jni_shared"
            }
        }
    }

    buildTypes {
        debug {
            packagingOptions {
                doNotStrip '**/*.so'  // controlled by OpenCV CMake scripts
            }
        }
        release {
            packagingOptions {
                doNotStrip '**/*.so'  // controlled by OpenCV CMake scripts
            }
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['src/main/jniLibs']
            java.srcDirs = ['src/main/java']
            res.srcDirs = ['src/main/res']
            manifest.srcFile 'src/main/AndroidManifest.xml'
        }
    }

    externalNativeBuild {
        cmake {
            path (project.projectDir.toString() + '/libcxx_helper/CMakeLists.txt')
        }
    }
}

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    from fileTree(dir: 'src/libs', include: ['*.jar'])
    classifier "sources"
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release

                artifact androidSourcesJar

                groupId 'com.zynkware'
                artifactId 'opencv'
                version openCVersionName
            }
        }
//        repositories {
//            maven {
//                name = "GitHubPackages"
//                /** Configure path of your package repository on Github
//                 ** Replace GITHUB_USERID with your/organisation Github userID
//                 ** and REPOSITORY with the repository name on GitHub
//                 */
//                url = uri("https://maven.pkg.github.com/GITHUB_USERID/REPOSITORY")
//                credentials {
//                    /** Create github.properties in root project folder file with
//                     ** gpr.usr=GITHUB_USER_ID & gpr.key=PERSONAL_ACCESS_TOKEN
//                     ** Set env variable GPR_USER & GPR_API_KEY if not adding a properties file**/
//
//                    username = githubProperties['gpr.usr'] ?: System.getenv("GPR_USER")
//                    password = githubProperties['gpr.key'] ?: System.getenv("GPR_API_KEY")
//                }
//            }
//        }
    }
}
